import { FormWrapper } from './form-wrapper';
import { AuthFormProps } from '@prodgenie/types';
import { cn } from '@prodgenie/apps/utils';
import {
  Button,
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
  Input,
  Label,
} from '../';

const AuthForm = ({
  fields,
  onSubmit,
  buttonLabel,
  className,
  ...props
}: AuthFormProps) => {
  return (
    <div className={cn('flex flex-col gap-6', className)} {...props}>
      <Card>
        <CardHeader>
          <CardTitle className="text-2xl">{buttonLabel}</CardTitle>
          <CardDescription>
            {buttonLabel === 'Login'
              ? 'Enter your email below to login to your account'
              : 'Fill in the form to create a new account'}
          </CardDescription>
        </CardHeader>
        <CardContent>
          <FormWrapper
            onSubmit={onSubmit}
            successMessage={
              buttonLabel === 'Login'
                ? 'Logged in successfully'
                : 'Account created successfully'
            }
            errorMessage={
              buttonLabel === 'Login'
                ? 'Login failed. Please try again.'
                : 'Signup failed. Please try again.'
            }
            render={({ register, errors, isLoading }) => (
              <div className="flex flex-col gap-6">
                {fields.map(({ name, label, type, validation }) => (
                  <div key={name} className="grid gap-2">
                    <Label htmlFor={name}>{label}</Label>
                    <Input
                      id={name}
                      type={type}
                      {...register(name, validation)}
                      required={!!validation?.required}
                      disabled={isLoading}
                    />
                    {errors[name]?.message && (
                      <p className="text-red-500 text-sm">
                        {String(errors[name]?.message)}
                      </p>
                    )}
                  </div>
                ))}
                <Button type="submit" className="w-full" disabled={isLoading}>
                  {isLoading ? `${buttonLabel}...` : buttonLabel}
                </Button>
                {buttonLabel === 'Login' && (
                  <Button variant="outline" className="w-full">
                    Login with Google
                  </Button>
                )}
              </div>
            )}
          />
          {buttonLabel === 'Login' ? (
            <div className="mt-4 text-center text-sm">
              Don&apos;t have an account?{' '}
              <a href="/signup" className="underline underline-offset-4">
                Sign up
              </a>
            </div>
          ) : (
            <div className="mt-4 text-center text-sm">
              Already have an account?{' '}
              <a href="/login" className="underline underline-offset-4">
                Login
              </a>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export { AuthForm };
